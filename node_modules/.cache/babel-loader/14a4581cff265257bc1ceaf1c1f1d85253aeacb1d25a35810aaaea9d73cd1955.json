{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alstn\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\6MS-FrontEnd\\\\service\\\\src\\\\pages\\\\loginPage\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport xImg from '../../x.png';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginCheck, setLoginCheck] = useState(false); // 로그인 상태 체크\n\n  const navigate = useNavigate();\n  const handleLogin = async event => {\n    // 로그인 처리 로직을 구현합니다.\n    event.preventDefault();\n    await new Promise(r => setTimeout(r, 1000));\n    const response = await fetch(\"로그인 서버 주소\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n    const result = await response.json();\n    if (response.status === 200) {\n      setLoginCheck(false);\n      // Store token in local storage\n      sessionStorage.setItem(\"token\", result.token);\n      sessionStorage.setItem(\"email\", result.email); // 여기서 userid를 저장합니다.\n      sessionStorage.setItem(\"role\", result.role); // 여기서 role를 저장합니다.\n      sessionStorage.setItem(\"storeid\", result.storeId); // 여기서 role를 저장합니다.\n      console.log(\"로그인성공, 이메일주소:\" + result.email);\n      navigate(\"/\"); // 로그인 성공시 홈으로 이동합니다.\n    } else {\n      setLoginCheck(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"On&Off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), loginCheck && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"\\uC774\\uBA54\\uC77C \\uD639\\uC740 \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uD2C0\\uB838\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-link\",\n        children: [\"\\uC544\\uC9C1 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(Login, \"GC6S7NAAk+Iy+JqAKCUo6pKEdDM=\", true);\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","xImg","Link","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","loginCheck","setLoginCheck","navigate","useNavigate","handleLogin","event","preventDefault","Promise","r","setTimeout","response","fetch","method","headers","body","JSON","stringify","result","json","status","sessionStorage","setItem","token","role","storeId","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","style","color","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/alstn/OneDrive/바탕 화면/6MS-FrontEnd/service/src/pages/loginPage/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport xImg from '../../x.png'; \r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginCheck, setLoginCheck] = useState(false); // 로그인 상태 체크\r\n  \r\n    const navigate = useNavigate();\r\n  \r\n    const handleLogin = async (event) => {\r\n      // 로그인 처리 로직을 구현합니다.\r\n      event.preventDefault();\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      \r\n      const response = await fetch(\r\n        \"로그인 서버 주소\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: email,\r\n            password: password,\r\n          }),\r\n        }\r\n      );\r\n      const result = await response.json();\r\n  \r\n      if (response.status === 200) {\r\n        setLoginCheck(false);\r\n        // Store token in local storage\r\n        sessionStorage.setItem(\"token\", result.token);\r\n        sessionStorage.setItem(\"email\", result.email); // 여기서 userid를 저장합니다.\r\n        sessionStorage.setItem(\"role\", result.role); // 여기서 role를 저장합니다.\r\n        sessionStorage.setItem(\"storeid\", result.storeId); // 여기서 role를 저장합니다.\r\n        console.log(\"로그인성공, 이메일주소:\" + result.email);\r\n        navigate(\"/\"); // 로그인 성공시 홈으로 이동합니다.\r\n      } else {\r\n        setLoginCheck(true);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"login-container\">\r\n        <form className=\"login-form\" onSubmit={handleLogin}>\r\n          <h1>On&Off</h1>\r\n          <label htmlFor=\"username\">이메일</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n  \r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n           {loginCheck && (\r\n          <label  style={{color: \"red\"}}>이메일 혹은 비밀번호가 틀렸습니다.</label>\r\n          )}\r\n          <button onClick={handleLogin}>로그인</button>\r\n  \r\n          <p className=\"signup-link\">\r\n            아직 회원이 아니신가요? <Link to=\"/signup\">회원가입</Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}